{"ast":null,"code":"import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { loadAxiosProgress } from \"axios-progress\";\nloadAxiosProgress(axios);\nexport const formatDescription = description => {\n  const urlRegex = /(https?:\\/\\/[^\\s]+)|(www\\.[^\\s]+)/g;\n  return description.replace(urlRegex, url => {\n    if (url.startsWith(\"http\")) {\n      return `<a href=\"${url}\" target=\"_blank\">${url}</a>`;\n    } else {\n      return `<a href=\"https://${url}\" target=\"_blank\">${url}</a>`;\n    }\n  });\n};\nexport const applyFilter = (podcasts, filterValue) => {\n  const normalizedFilter = filterValue.toLowerCase();\n  return podcasts.filter(podcast => {\n    const name = podcast[\"im:name\"].label.toLowerCase();\n    const artist = podcast[\"im:artist\"].label.toLowerCase();\n    return name.includes(normalizedFilter) || artist.includes(normalizedFilter);\n  });\n};\nexport const fetchPodcastDetails = createAsyncThunk(\"podcast/fetchPodcastDetails\", async (podcastId, _ref) => {\n  let {\n    rejectWithValue,\n    dispatch\n  } = _ref;\n  try {\n    const response = await axios.get(`https://api.allorigins.win/get?url=${encodeURIComponent(`https://itunes.apple.com/lookup?id=${podcastId}&media=podcast&entity=podcastEpisode&limit=20`)}`);\n    if (!response.data || !response.data.contents) {\n      throw new Error(\"Server response was not as expected.\");\n    }\n    const parsedData = await JSON.parse(response.data.contents);\n    return parsedData.results;\n  } catch (error) {\n    return rejectWithValue(error.message);\n  }\n});\nexport const fetchPodcasts = createAsyncThunk(\"podcast/fetchPodcasts\", async (_, _ref2) => {\n  let {\n    rejectWithValue,\n    dispatch\n  } = _ref2;\n  try {\n    const response = await axios.get(`https://api.allorigins.win/get?url=${encodeURIComponent(\"https://itunes.apple.com/us/rss/toppodcasts/limit=100/genre=1310/json\")}`);\n    if (!response.data) {\n      throw new Error(\"Server response was not as expected.\");\n    }\n    const parsedData = JSON.parse(response.data.contents);\n    const podcasts = parsedData.feed.entry.map(entry => {\n      var _entry$summary;\n      return {\n        id: entry.id.attributes[\"im:id\"],\n        summary: ((_entry$summary = entry.summary) === null || _entry$summary === void 0 ? void 0 : _entry$summary.label) || \"\",\n        \"im:name\": {\n          label: entry[\"im:name\"].label\n        },\n        \"im:artist\": {\n          label: entry[\"im:artist\"].label\n        },\n        \"im:image\": entry[\"im:image\"].map(image => ({\n          label: image.label,\n          attributes: {\n            height: image.attributes.height\n          }\n        }))\n      };\n    });\n    return podcasts;\n  } catch (error) {\n    return rejectWithValue(error.message);\n  }\n});\n\n// export const fetchPodcasts = createAsyncThunk(\n//   \"podcast/fetchPodcasts\",\n//   async (_, { rejectWithValue, dispatch }) => {\n//     try {\n//       const response = await axios.get(\n//         `https://api.allorigins.win/get?url=${encodeURIComponent(\n//           \"https://itunes.apple.com/us/rss/toppodcasts/limit=100/genre=1310/json\"\n//         )}`,\n//         {\n//           responseType: \"json\",\n//           onDownloadProgress: (progressEvent) => {\n//             const percentCompleted = Math.round(\n//               (progressEvent.loaded * 100) / progressEvent.total\n//             );\n//             dispatch(updateDownloadProgress(percentCompleted));\n//           },\n//         }\n//       );\n\n//       if (!response.data) {\n//         throw new Error(\"Server response was not as expected.\");\n//       }\n\n//       const parsedData = JSON.parse(response.data.contents);\n\n//       const podcasts = parsedData.feed.entry.map((entry) => ({\n//         id: entry.id.attributes[\"im:id\"],\n//         summary: entry.summary?.label || \"\",\n//         \"im:name\": { label: entry[\"im:name\"].label },\n//         \"im:artist\": { label: entry[\"im:artist\"].label },\n//         \"im:image\": entry[\"im:image\"].map((image) => ({\n//           label: image.label,\n//           attributes: { height: image.attributes.height },\n//         })),\n//       }));\n\n//       return podcasts;\n//     } catch (error) {\n//       return rejectWithValue(error.message);\n//     }\n//   }\n// );","map":{"version":3,"names":["createAsyncThunk","axios","loadAxiosProgress","formatDescription","description","urlRegex","replace","url","startsWith","applyFilter","podcasts","filterValue","normalizedFilter","toLowerCase","filter","podcast","name","label","artist","includes","fetchPodcastDetails","podcastId","_ref","rejectWithValue","dispatch","response","get","encodeURIComponent","data","contents","Error","parsedData","JSON","parse","results","error","message","fetchPodcasts","_","_ref2","feed","entry","map","_entry$summary","id","attributes","summary","image","height"],"sources":["/Users/xavitorner/Downloads/inditex_podcaster/src/utils/utils.js"],"sourcesContent":["import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { loadAxiosProgress } from \"axios-progress\";\n\nloadAxiosProgress(axios);\n\nexport const formatDescription = (description) => {\n  const urlRegex = /(https?:\\/\\/[^\\s]+)|(www\\.[^\\s]+)/g;\n  return description.replace(urlRegex, (url) => {\n    if (url.startsWith(\"http\")) {\n      return `<a href=\"${url}\" target=\"_blank\">${url}</a>`;\n    } else {\n      return `<a href=\"https://${url}\" target=\"_blank\">${url}</a>`;\n    }\n  });\n};\n\nexport const applyFilter = (podcasts, filterValue) => {\n  const normalizedFilter = filterValue.toLowerCase();\n  return podcasts.filter((podcast) => {\n    const name = podcast[\"im:name\"].label.toLowerCase();\n    const artist = podcast[\"im:artist\"].label.toLowerCase();\n    return name.includes(normalizedFilter) || artist.includes(normalizedFilter);\n  });\n};\n\nexport const fetchPodcastDetails = createAsyncThunk(\n  \"podcast/fetchPodcastDetails\",\n  async (podcastId, { rejectWithValue, dispatch }) => {\n    try {\n      const response = await axios.get(\n        `https://api.allorigins.win/get?url=${encodeURIComponent(\n          `https://itunes.apple.com/lookup?id=${podcastId}&media=podcast&entity=podcastEpisode&limit=20`\n        )}`\n      );\n\n      if (!response.data || !response.data.contents) {\n        throw new Error(\"Server response was not as expected.\");\n      }\n\n      const parsedData = await JSON.parse(response.data.contents);\n\n      return parsedData.results;\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  }\n);\n\nexport const fetchPodcasts = createAsyncThunk(\n  \"podcast/fetchPodcasts\",\n  async (_, { rejectWithValue, dispatch }) => {\n    try {\n      const response = await axios.get(\n        `https://api.allorigins.win/get?url=${encodeURIComponent(\n          \"https://itunes.apple.com/us/rss/toppodcasts/limit=100/genre=1310/json\"\n        )}`\n      );\n\n      if (!response.data) {\n        throw new Error(\"Server response was not as expected.\");\n      }\n\n      const parsedData = JSON.parse(response.data.contents);\n\n      const podcasts = parsedData.feed.entry.map((entry) => ({\n        id: entry.id.attributes[\"im:id\"],\n        summary: entry.summary?.label || \"\",\n        \"im:name\": { label: entry[\"im:name\"].label },\n        \"im:artist\": { label: entry[\"im:artist\"].label },\n        \"im:image\": entry[\"im:image\"].map((image) => ({\n          label: image.label,\n          attributes: { height: image.attributes.height },\n        })),\n      }));\n\n      return podcasts;\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  }\n);\n\n// export const fetchPodcasts = createAsyncThunk(\n//   \"podcast/fetchPodcasts\",\n//   async (_, { rejectWithValue, dispatch }) => {\n//     try {\n//       const response = await axios.get(\n//         `https://api.allorigins.win/get?url=${encodeURIComponent(\n//           \"https://itunes.apple.com/us/rss/toppodcasts/limit=100/genre=1310/json\"\n//         )}`,\n//         {\n//           responseType: \"json\",\n//           onDownloadProgress: (progressEvent) => {\n//             const percentCompleted = Math.round(\n//               (progressEvent.loaded * 100) / progressEvent.total\n//             );\n//             dispatch(updateDownloadProgress(percentCompleted));\n//           },\n//         }\n//       );\n\n//       if (!response.data) {\n//         throw new Error(\"Server response was not as expected.\");\n//       }\n\n//       const parsedData = JSON.parse(response.data.contents);\n\n//       const podcasts = parsedData.feed.entry.map((entry) => ({\n//         id: entry.id.attributes[\"im:id\"],\n//         summary: entry.summary?.label || \"\",\n//         \"im:name\": { label: entry[\"im:name\"].label },\n//         \"im:artist\": { label: entry[\"im:artist\"].label },\n//         \"im:image\": entry[\"im:image\"].map((image) => ({\n//           label: image.label,\n//           attributes: { height: image.attributes.height },\n//         })),\n//       }));\n\n//       return podcasts;\n//     } catch (error) {\n//       return rejectWithValue(error.message);\n//     }\n//   }\n// );\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}