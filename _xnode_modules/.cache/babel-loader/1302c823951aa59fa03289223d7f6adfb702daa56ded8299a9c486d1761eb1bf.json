{"ast":null,"code":"export var formatDescription=function formatDescription(description){var urlRegex=/(https?:\\/\\/[^\\s]+)|(www\\.[^\\s]+)/g;return description.replace(urlRegex,function(url){if(url.startsWith(\"http\")){return\"<a href=\\\"\".concat(url,\"\\\" target=\\\"_blank\\\">\").concat(url,\"</a>\");}else{return\"<a href=\\\"https://\".concat(url,\"\\\" target=\\\"_blank\\\">\").concat(url,\"</a>\");}});};export var applyFilter=function applyFilter(podcasts,filterValue){var normalizedFilter=filterValue.toLowerCase();return podcasts.filter(function(podcast){var name=podcast[\"im:name\"].label.toLowerCase();var artist=podcast[\"im:artist\"].label.toLowerCase();return name.includes(normalizedFilter)||artist.includes(normalizedFilter);});};// export const fetchPodcasts = createAsyncThunk(\n//   \"podcast/fetchPodcasts\",\n//   async (_, { rejectWithValue, dispatch }) => {\n//     try {\n//       const response = await axios.get(\n//         `https://api.allorigins.win/get?url=${encodeURIComponent(\n//           \"https://itunes.apple.com/us/rss/toppodcasts/limit=100/genre=1310/json\"\n//         )}`,\n//         {\n//           responseType: \"json\",\n//           onDownloadProgress: (progressEvent) => {\n//             const percentCompleted = Math.round(\n//               (progressEvent.loaded * 100) / progressEvent.total\n//             );\n//             dispatch(updateDownloadProgress(percentCompleted));\n//           },\n//         }\n//       );\n//       if (!response.data) {\n//         throw new Error(\"Server response was not as expected.\");\n//       }\n//       const parsedData = JSON.parse(response.data.contents);\n//       const podcasts = parsedData.feed.entry.map((entry) => ({\n//         id: entry.id.attributes[\"im:id\"],\n//         summary: entry.summary?.label || \"\",\n//         \"im:name\": { label: entry[\"im:name\"].label },\n//         \"im:artist\": { label: entry[\"im:artist\"].label },\n//         \"im:image\": entry[\"im:image\"].map((image) => ({\n//           label: image.label,\n//           attributes: { height: image.attributes.height },\n//         })),\n//       }));\n//       return podcasts;\n//     } catch (error) {\n//       return rejectWithValue(error.message);\n//     }\n//   }\n// );","map":{"version":3,"names":["formatDescription","description","urlRegex","replace","url","startsWith","concat","applyFilter","podcasts","filterValue","normalizedFilter","toLowerCase","filter","podcast","name","label","artist","includes"],"sources":["/Users/xavitorner/Downloads/inditex_podcaster/src/utils/utils.js"],"sourcesContent":["export const formatDescription = (description) => {\n  const urlRegex = /(https?:\\/\\/[^\\s]+)|(www\\.[^\\s]+)/g;\n  return description.replace(urlRegex, (url) => {\n    if (url.startsWith(\"http\")) {\n      return `<a href=\"${url}\" target=\"_blank\">${url}</a>`;\n    } else {\n      return `<a href=\"https://${url}\" target=\"_blank\">${url}</a>`;\n    }\n  });\n};\n\nexport const applyFilter = (podcasts, filterValue) => {\n  const normalizedFilter = filterValue.toLowerCase();\n  return podcasts.filter((podcast) => {\n    const name = podcast[\"im:name\"].label.toLowerCase();\n    const artist = podcast[\"im:artist\"].label.toLowerCase();\n    return name.includes(normalizedFilter) || artist.includes(normalizedFilter);\n  });\n};\n\n// export const fetchPodcasts = createAsyncThunk(\n//   \"podcast/fetchPodcasts\",\n//   async (_, { rejectWithValue, dispatch }) => {\n//     try {\n//       const response = await axios.get(\n//         `https://api.allorigins.win/get?url=${encodeURIComponent(\n//           \"https://itunes.apple.com/us/rss/toppodcasts/limit=100/genre=1310/json\"\n//         )}`,\n//         {\n//           responseType: \"json\",\n//           onDownloadProgress: (progressEvent) => {\n//             const percentCompleted = Math.round(\n//               (progressEvent.loaded * 100) / progressEvent.total\n//             );\n//             dispatch(updateDownloadProgress(percentCompleted));\n//           },\n//         }\n//       );\n\n//       if (!response.data) {\n//         throw new Error(\"Server response was not as expected.\");\n//       }\n\n//       const parsedData = JSON.parse(response.data.contents);\n\n//       const podcasts = parsedData.feed.entry.map((entry) => ({\n//         id: entry.id.attributes[\"im:id\"],\n//         summary: entry.summary?.label || \"\",\n//         \"im:name\": { label: entry[\"im:name\"].label },\n//         \"im:artist\": { label: entry[\"im:artist\"].label },\n//         \"im:image\": entry[\"im:image\"].map((image) => ({\n//           label: image.label,\n//           attributes: { height: image.attributes.height },\n//         })),\n//       }));\n\n//       return podcasts;\n//     } catch (error) {\n//       return rejectWithValue(error.message);\n//     }\n//   }\n// );\n"],"mappings":"AAAA,MAAO,IAAM,CAAAA,iBAAiB,CAAG,QAApB,CAAAA,iBAAiBA,CAAIC,WAAW,CAAK,CAChD,GAAM,CAAAC,QAAQ,CAAG,oCAAoC,CACrD,MAAO,CAAAD,WAAW,CAACE,OAAO,CAACD,QAAQ,CAAE,SAACE,GAAG,CAAK,CAC5C,GAAIA,GAAG,CAACC,UAAU,CAAC,MAAM,CAAC,CAAE,CAC1B,mBAAAC,MAAA,CAAmBF,GAAG,0BAAAE,MAAA,CAAqBF,GAAG,SAChD,CAAC,IAAM,CACL,2BAAAE,MAAA,CAA2BF,GAAG,0BAAAE,MAAA,CAAqBF,GAAG,SACxD,CACF,CAAC,CAAC,CACJ,CAAC,CAED,MAAO,IAAM,CAAAG,WAAW,CAAG,QAAd,CAAAA,WAAWA,CAAIC,QAAQ,CAAEC,WAAW,CAAK,CACpD,GAAM,CAAAC,gBAAgB,CAAGD,WAAW,CAACE,WAAW,CAAC,CAAC,CAClD,MAAO,CAAAH,QAAQ,CAACI,MAAM,CAAC,SAACC,OAAO,CAAK,CAClC,GAAM,CAAAC,IAAI,CAAGD,OAAO,CAAC,SAAS,CAAC,CAACE,KAAK,CAACJ,WAAW,CAAC,CAAC,CACnD,GAAM,CAAAK,MAAM,CAAGH,OAAO,CAAC,WAAW,CAAC,CAACE,KAAK,CAACJ,WAAW,CAAC,CAAC,CACvD,MAAO,CAAAG,IAAI,CAACG,QAAQ,CAACP,gBAAgB,CAAC,EAAIM,MAAM,CAACC,QAAQ,CAACP,gBAAgB,CAAC,CAC7E,CAAC,CAAC,CACJ,CAAC,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}